const chalk = require("chalk");
const express = require("express");
const bodyParser = require('body-parser');
const RESTSchema = require("./RESTSchema");

class Server
{
    constructor(secret) {
        this.secret = secret;
        this.serverPort = 4101;
        this.taapiApiEndpoint = "https://api.taapi.io";

        this.dataProviderName = "CCXT";
        this.dataProviderSecret = "";
        this.dataProviderEndpoint = null;

        if(!secret) {
            
            console.log(chalk.red("You must provide your TAAPI.IO secret as the first constructor parameter!"));

        }
    }

    /**
     * Override the server port number
     * 
     * @param {*} port 
     */
    setServerPort(port) {
        this.serverPort = port;
    }

    /**
     * Override the API Endpoint, E.g to staging
     * 
     * @param {*} endpoint 
     */
    setTaapiApiEndpoint(endpoint) {
        this.taapiApiEndpoint = endpoint;
    }

    setDataProvider(name, secret, endpoint) {
        this.dataProviderName = name.toLowerCase();
        this.dataProviderSecret = secret;
        this.dataProviderEndpoint = endpoint;
    }

    setDataProviderTaapiCache(secret, endpoint) {
        this.setDataProvider("taapicache", secret, endpoint);
    }

    setDataProviderAlphaVantage(secret) {
        this.setDataProvider("alphavantage", secret);
    }

    setDataProviderFinnHub(secret) {
        this.setDataProvider("finnhub", secret);
    }

    /**
     * Boot up the express server
     */
    async start() {        

        console.log(chalk.cyan("Setting up TAAPI.IO local API..."));

        // Init express
        const api = express();

        // Middleware
        api.use( bodyParser.json() );       // to support JSON-encoded bodies
        api.use(bodyParser.urlencoded({     // to support URL-encoded bodies
            extended: true
        }));

        // Init REST Schema
        const restSchema = new RESTSchema(api, this.secret, this.taapiApiEndpoint);

        // Configure local server endpoints
        await restSchema.configureEndpoints();        

        // Start express server
        api.listen(this.serverPort, () => {
            console.log(chalk.green(`TAAPI.IO Server API Running on localhost:${this.serverPort}!`));
        });

    }
}

// Export the server module
module.exports = Server;